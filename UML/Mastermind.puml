@startuml
skinparam classAttributeIconSize 0

' Models
class Game {
    - List<Guesser> players
    - GameUI gameUI
    - String secretCode
    - List<String> guesses
    - boolean solved
    - Map<String, Integer> playerAttempts
    - String formattedDate
    - int gameID
    + startGame()
    + provideFeedback(Player, String): String
    + isValidGuess(String): boolean
    + finalizeGameData()
}

class Player {
    # String playerName
    # PlayerLevel level
    + getPlayerName(): String
    + getLevel(): PlayerLevel
    {abstract} + makeGuess(): String
}

class Guesser {
    - List<String> guesses
    + makeGuess(): String
    + getGuesses(): List<String
    + hasSolved(String): boolean
}

enum PlayerLevel {
    + BEGINNER
    + MEDIUM
    + HARD
    + fromChoice(int): PlayerLevel
    + getMaxAttempts(): int
    + isShowDetailedFb(): boolean
}

class SecretKeeper {
    - String secretCode
    + getSecretCode(): String
    + initializeSecretCode(): String
}

' DAO
class GameDataDAO {
    {abstract} + saveGameData(Game): void
    {abstract} + getLeaderboard(int): List<Game>
}

class SQLiteGameDataDAO {
    - String dbPath
    + saveGameData(Game): void
    + getLeaderboard(int): List<Game>
}

class DAOFactory {
    + createGameDataDAO(String, String): GameDataDAO
}

' DB Connection
class DatabaseConnectionManager {
    - Connection connection
    + getConnection(String): Connection
    + closeConnection(): void
}

' Controllers
class GameSetup {
    - Scanner scanner
    + setupPlayers(GameDataDAO, String[]): List<Guesser>
    + checkDebugMode(String[]): boolean
}

class LeaderboardMngr {
    - GameDataDAO gameDataDAO
    + handleLeaderboard(String[]): void
    + displayLeaderboard(int): void
}

' Relationships
Game --> Guesser : uses
Game --> SecretKeeper : uses
Game --> GameDataDAO : uses
Player --> PlayerLevel : uses
Guesser --|> Player : extends
SQLiteGameDataDAO --|> GameDataDAO : implements
DAOFactory --> GameDataDAO : creates
LeaderboardMngr --> GameDataDAO : uses
GameSetup --> Guesser : creates
DatabaseConnectionManager ..> SQLiteGameDataDAO : supports

@enduml